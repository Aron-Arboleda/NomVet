<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>